{{ define "title" }}{{ .EventsManagerLabel }}{{ end }}

{{ define "head" }}
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
{{ end }}

{{ define "content" }}
    {{ $viewData := . }}
    <div class="container mt-4">
        {{ if $viewData.SelectedItemForEdit }}
            {{ template "partials/_edit_event_form.tmpl" $viewData }}
        {{ else }}
            <div id="newEventContainer" style="display: none;">
                {{ template "partials/_new_event_form.tmpl" $viewData }}
            </div>
        {{ end }}
        <div class="card mt-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4 class="mb-0">All {{ .EventsManagerLabel }}</h4>
                <button id="globalNewEventButton" class="btn btn-primary"
                        {{ if $viewData.SelectedItemForEdit }}disabled{{ end }}>+ New
                </button>
            </div>
            {{ if .EventList }}
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0" id="eventsTable">
                        <thead class="table-light">
                        <tr>
                            <th scope="col" style="width:30%;"
                                class="sortable" data-key="title">
                                Title <i class="bi bi-chevron-expand ms-1"></i>
                            </th>
                            <th scope="col" class="text-nowrap sortable" data-key="start">
                                When <i class="bi bi-chevron-expand ms-1"></i>
                            </th>
                            <th scope="col" style="width:25%;"
                                class="sortable" data-key="venue">
                                Venue <i class="bi bi-chevron-expand ms-1"></i>
                            </th>
                            <th scope="col" style="width:90px;"
                                class="text-center text-nowrap sortable" data-key="rsvp">
                                RSVPs <i class="bi bi-chevron-expand ms-1"></i>
                            </th>
                            <th scope="col" class="text-end">Actions</th>
                        </tr>
                        </thead>
                        <tbody id="eventsTableBody">
                        {{ range .EventList }}
                            <tr data-title="{{ .Title }}"
                                data-start="{{ .StartTime.Unix }}"
                                data-venue="{{ .VenueName }}"
                                data-rsvp="{{ .RSVPAnsweredCount }}">
                                <td class="align-middle" style="width:30%;">{{ .Title }}</td>
                                <td class="align-middle text-nowrap">
                                    {{ .StartTime.Format "Jan 2, 2006 3:04 PM" }} â€“ {{ .EndTime.Format "3:04 PM" }}
                                </td>
                                <td class="align-middle" style="width:25%;">{{ .VenueName }}</td>
                                <td class="align-middle text-center" style="width:90px;">
                                    {{ .RSVPAnsweredCount }} / {{ .RSVPCount }}
                                </td>
                                <td class="text-end align-middle">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a href="{{ $viewData.URLForEventActions }}?{{ $viewData.ParamNameEventID }}={{ .ID }}"
                                           class="btn btn-outline-secondary text-nowrap">Edit</a>
                                        <a href="{{ $viewData.URLForRSVPListBase }}?{{ $viewData.ParamNameEventID }}={{ .ID }}"
                                           class="btn btn-outline-primary text-nowrap">Manage RSVPs</a>
                                    </div>
                                </td>
                            </tr>
                        {{ end }}
                        </tbody>
                    </table>
                </div>
            {{ else }}
                <div class="card-body text-center">
                    <p class="mb-0">No {{ .EventsManagerLabel }} found. Click "+ New
                        {{ .EventsManagerLabel }}" to create your first {{ .EventsManagerLabel }}!</p>
                </div>
            {{ end }}
        </div>
    </div>
{{ end }}

{{ define "scripts" }}
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.css">
    <script src="https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            function initMDE(id) {
                const el = document.getElementById(id);
                if (el) {
                    new EasyMDE({
                        element: el,
                        spellChecker: false,
                        toolbar: ["bold", "italic", "heading", "|", "quote",
                            "unordered-list", "ordered-list", "|", "link", "|", "preview"],
                        forceSync: true,
                        minHeight: "100px"
                    });
                }
            }

            initMDE("descriptionInput");
            initMDE("editDescriptionInput");

            const newBtn = document.getElementById("globalNewEventButton");
            const newContainer = document.getElementById("newEventContainer");
            const cancelBtn = document.getElementById("cancelNewEventButton");
            const editCard = document.getElementById("editEventCard");

            if (newBtn && newContainer && !editCard) {
                newBtn.addEventListener("click", () => {
                    newContainer.style.display = "block";
                    newBtn.style.display = "none";
                });
            }
            if (cancelBtn && newContainer && newBtn) {
                cancelBtn.addEventListener("click", () => {
                    newContainer.style.display = "none";
                    newBtn.style.display = "block";
                    const form = document.getElementById("newEventForm");
                    if (form) {
                        form.reset();
                        const mde = EasyMDE.getInstance(document.getElementById("descriptionInput"));
                        if (mde) mde.value("");
                    }
                });
            }

            const headers = document.querySelectorAll("th.sortable");
            let currentKey = "";
            let asc = true;

            headers.forEach(h => {
                h.addEventListener("click", function () {
                    const key = this.dataset.key;
                    const tbody = document.getElementById("eventsTableBody");
                    const rows = Array.from(tbody.querySelectorAll("tr"));
                    if (currentKey !== key) {
                        if (currentKey) {
                            const prevIcon = document
                                .querySelector(`th.sortable[data-key="${currentKey}"] i`);
                            if (prevIcon) prevIcon.className = "bi bi-chevron-expand ms-1";
                        }
                        asc = true;
                        currentKey = key;
                    } else {
                        asc = !asc;
                    }
                    const icon = this.querySelector("i");
                    icon.className = "bi ms-1 " + (asc ? "bi-chevron-up" : "bi-chevron-down");

                    rows.sort((a, b) => {
                        const av = a.dataset[key];
                        const bv = b.dataset[key];
                        if (key === "start" || key === "rsvp") {
                            return asc ? av - bv : bv - av;
                        }
                        return asc ? av.localeCompare(bv) : bv.localeCompare(av);
                    });
                    rows.forEach(r => tbody.appendChild(r));
                });
            });
        });
    </script>
{{ end }}
{{ template "layout" . }}
